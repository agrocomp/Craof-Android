/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen.craof.insumo;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import org.controle.craof.Controle_CRUD_Insumo;

import org.entidade.craof.Insumo;
import org.entidade.craof.Plantio;
import screen.craof.FrameAuxiliar;
import screen.craof.SegundaTela;
import screen.craof.aplicacaoInsumos.AplicacaoInsumo;
import screen.craof.cultura.PanelCulturaBuscar;
import screen.craof.cultura.PanelCulturaCadastrar;
import screen.craof.fichas.CompraInsumos.CompraInsumosCadastrar;
import screen.craof.produzirInsumo.ProduzirInsumo;

/**
 *
 * @author Luan
 */
public class PanelInsumoBuscar extends javax.swing.JPanel {

    /**
     * Creates new form PanelInsumoBuscar
     */
    public PanelInsumoBuscar(JFrame frame) {
        initComponents();
        this.frame = frame;
        inicializar();
    }

    public void inicializar() {
        wsingredientes.setVisible(false);
        wl.setVisible(false);
        wtbingredientes.setVisible(false);
        wlProduzido.setVisible(false);
        jcSim.setVisible(false);
        cancelar.setVisible(false);
        novo.setVisible(false);
        if (frame instanceof FrameAuxiliar) {
            novo.setVisible(true);
            ((FrameAuxiliar) frame).corrigir();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wlDescricao = new javax.swing.JLabel();
        wtDescricao = new javax.swing.JTextField();
        wlProduzido = new javax.swing.JLabel();
        jcSim = new javax.swing.JCheckBox();
        wl = new javax.swing.JLabel();
        buscar1 = new javax.swing.JButton();
        wsingredientes = new javax.swing.JScrollPane();
        wtbingredientes = new javax.swing.JTable();
        cancelar = new javax.swing.JButton();
        wsinsumos = new javax.swing.JScrollPane();
        wtbinsumos = new javax.swing.JTable();
        selecionar = new javax.swing.JButton();
        novo = new javax.swing.JButton();
        cancelar1 = new javax.swing.JButton();

        wlDescricao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wlDescricao.setText("Descrição do Insumo:");

        wtDescricao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wtDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wtDescricaoActionPerformed(evt);
            }
        });

        wlProduzido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wlProduzido.setText("Produzido no Local:");

        jcSim.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcSim.setText("Sim");
        jcSim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcSimActionPerformed(evt);
            }
        });

        wl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wl.setText("Ingredientes");

        buscar1.setText("BUSCAR");
        buscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar1ActionPerformed(evt);
            }
        });

        wtbingredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código do Insumo", "Descrição do Insumo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        wsingredientes.setViewportView(wtbingredientes);

        cancelar.setText("CANCELAR");

        wtbinsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código do Insumo", "Descrição do Insumo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        wsinsumos.setViewportView(wtbinsumos);

        selecionar.setText("SELECIONAR");
        selecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarActionPerformed(evt);
            }
        });

        novo.setText("NOVO");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });

        cancelar1.setText("CANCELAR");
        cancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wlDescricao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wlProduzido, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcSim)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscar1)))
                .addGap(107, 107, 107))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(227, 227, 227)
                            .addComponent(wl))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(175, 175, 175)
                            .addComponent(selecionar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(novo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cancelar1))
                        .addComponent(wsinsumos, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)
                        .addComponent(wsingredientes))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscar1)
                    .addComponent(wtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wlDescricao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcSim)
                    .addComponent(wlProduzido))
                .addGap(12, 12, 12)
                .addComponent(wl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(wsingredientes, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelar)
                .addGap(18, 18, 18)
                .addComponent(wsinsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selecionar)
                    .addComponent(novo)
                    .addComponent(cancelar1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcSimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcSimActionPerformed
        if (jcSim.isSelected()) {
            wsingredientes.setVisible(true);
            wl.setVisible(true);
            wtbingredientes.setVisible(true);
        } else {
            wsingredientes.setVisible(false);
            wl.setVisible(false);
            wtbingredientes.setVisible(false);
        }
        if (frame instanceof SegundaTela) {
            ((SegundaTela) frame).corrigir();
        }
    }//GEN-LAST:event_jcSimActionPerformed

    private void selecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarActionPerformed
        int linha = wtbinsumos.getSelectedRow();
        if (linha >= 0) {
            if (frame instanceof SegundaTela) {
                try {
                    montar((Integer) wtbinsumos.getValueAt(linha, 0));
                } catch (SQLException ex) {
                    Logger.getLogger(PanelInsumoBuscar.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                FrameAuxiliar c = (FrameAuxiliar) frame;
                Insumo insumo = new Insumo();
                insumo.setId_insumo((Integer) wtbinsumos.getValueAt(linha, 0));
                insumo.setDescricao((String) wtbinsumos.getValueAt(linha, 1));
                System.out.println(c.getPanel().getClass().toString());
                if (c.getPanel() instanceof PanelInsumoBuscar) {
                    ((PanelInsumoBuscar) c.getPanel()).inserirTabela(insumo);
                } else if (c.getPanel() instanceof CompraInsumosCadastrar) {
                    ((CompraInsumosCadastrar) c.getPanel()).setInsumo(insumo);
                    c.fechar();
                } else if (c.getPanel() instanceof PanelInsumoCadastrar) {
                    ((PanelInsumoCadastrar) c.getPanel()).inserirTabela(insumo);
                    c.fechar();
                }else if(c.getPanel() instanceof AplicacaoInsumo){
                    ((AplicacaoInsumo) c.getPanel()).setInsumo(insumo);
                    c.fechar();
                } else if (c.getPanel() instanceof ProduzirInsumo) {
                    if (retorno == null) {
                        try {
                            montar2(insumo.getId_insumo());
                            retorno = insumo;
                        } catch (SQLException ex) {
                            Logger.getLogger(PanelInsumoBuscar.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        System.out.println(retorno.getId_insumo());
                        ((ProduzirInsumo) c.getPanel()).setInsumo(retorno);
                        c.fechar();
                    }
                }
                //colocar na ficha certa

            }
        }
    }//GEN-LAST:event_selecionarActionPerformed

    public void inserirTabela(Insumo insumo) {
        //Inserir esse dado na tabela
    }

    public void montar(int id) throws SQLException {
        cancelar.setVisible(true);
        cancelar1.setVisible(false);
        selecionar.setVisible(false);
        wsinsumos.setVisible(false);
        wlProduzido.setVisible(true);
        jcSim.setVisible(true);
        buscar1.setVisible(false);
        jcSim.setEnabled(false);
        //buscar Insumo com este id;
        Insumo s = controle.buscarById(id);
        wtDescricao.setText(s.getDescricao());
        wtDescricao.setEnabled(false);
        if (s.getFlagProducao()) {
            wsingredientes.setVisible(true);
            wl.setVisible(true);
            jcSim.setVisible(true);
            jcSim.setSelected(true);
            wtbingredientes.setVisible(true);
            s.getListaInsumo().addAll(controle.buscarTodosItens(s));
            DefaultTableModel model = (DefaultTableModel) wtbingredientes.getModel();
            model.getDataVector().removeAllElements();
            for (Insumo aux : s.getListaInsumo()) {
                model.addRow(new Object[]{aux.getId_insumo(), aux.getDescricao()});
            }
            ((SegundaTela) frame).corrigir();
            //buscar todos os itensProdutos para este id
        }
    }

    public void montar2(int id) throws SQLException {
        
        //cancelar1.setVisible(false);
        wsinsumos.setVisible(false);
        wlProduzido.setVisible(true);
        jcSim.setVisible(true);
        buscar1.setVisible(false);
        jcSim.setEnabled(false);
        cancelar.setVisible(false);
        
        //buscar Insumo com este id;
        Insumo s = controle.buscarById(id);
        wtDescricao.setText(s.getDescricao());
        wtDescricao.setEnabled(false);
        wsingredientes.setVisible(true);
        wl.setVisible(true);
        jcSim.setVisible(true);
        jcSim.setSelected(true);
        wtbingredientes.setVisible(true);
        s.getListaInsumo().addAll(controle.buscarTodosItens(s));
        DefaultTableModel model = (DefaultTableModel) wtbingredientes.getModel();
        model.getDataVector().removeAllElements();
        for (Insumo aux : s.getListaInsumo()) {
            model.addRow(new Object[]{aux.getId_insumo(), aux.getDescricao()});
        }
        if(frame instanceof SegundaTela)
        ((SegundaTela) frame).corrigir();
        //buscar todos os itensProdutos para este id

    }
    private void buscarItemInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarItemInsumoActionPerformed
        FrameAuxiliar c = new FrameAuxiliar(this);
        c.abrirPanel(new PanelCulturaBuscar(frame), "CRAOF");
        c.setVisible(true);
    }//GEN-LAST:event_buscarItemInsumoActionPerformed


    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
        FrameAuxiliar c = (FrameAuxiliar) frame;
        try {
            c.abrirPanel(new PanelInsumoCadastrar(frame), "CRAOF");
        } catch (SQLException ex) {
            Logger.getLogger(PanelInsumoBuscar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_novoActionPerformed

    private void cancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar1ActionPerformed
        if (frame instanceof FrameAuxiliar) {
            ((FrameAuxiliar) frame).fechar();
        } else {
            ((SegundaTela) frame).fecharPanel();
        }
    }//GEN-LAST:event_cancelar1ActionPerformed

    private void wtDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wtDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wtDescricaoActionPerformed

    private void buscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar1ActionPerformed
        insumo = new Insumo();
        controle = new Controle_CRUD_Insumo();
        listaInsumo = new ArrayList();
        //System.out.println(wtDescricao.getText());
        insumo.setDescricao(wtDescricao.getText().toUpperCase());
        insumo.setId_usuario(1);
        if (frame instanceof FrameAuxiliar) {
            FrameAuxiliar c = (FrameAuxiliar) frame;
            if (c.getPanel() instanceof CompraInsumosCadastrar) {
                insumo.setFlagProducao(false);
            } else {
                insumo.setFlagProducao(true);
            }
        } else {
            insumo.setFlagProducao(null);
        }

        try {
            listaInsumo = controle.buscarTodos(insumo);
            System.out.println(listaInsumo.size());
            DefaultTableModel model = (DefaultTableModel) wtbinsumos.getModel();
            model.getDataVector().removeAllElements();
            for (Insumo aux : listaInsumo) {
                model.addRow(new Object[]{aux.getId_insumo(), aux.getDescricao()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelInsumoBuscar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar1;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton cancelar1;
    private javax.swing.JCheckBox jcSim;
    private javax.swing.JButton novo;
    private javax.swing.JButton selecionar;
    private javax.swing.JLabel wl;
    private javax.swing.JLabel wlDescricao;
    private javax.swing.JLabel wlProduzido;
    private javax.swing.JScrollPane wsingredientes;
    private javax.swing.JScrollPane wsinsumos;
    private javax.swing.JTextField wtDescricao;
    private javax.swing.JTable wtbingredientes;
    private javax.swing.JTable wtbinsumos;
    // End of variables declaration//GEN-END:variables
    private JFrame frame;
    private Insumo insumo;
    private Controle_CRUD_Insumo controle;
    private ArrayList<Insumo> listaInsumo;
    private Insumo retorno;
}
