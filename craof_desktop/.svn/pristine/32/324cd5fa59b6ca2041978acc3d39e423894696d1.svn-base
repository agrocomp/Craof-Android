/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen.craof.local;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.controle.craof.Controle_CRUD_Cultura;
import org.controle.craof.Controle_CRUD_Local;
import org.entidade.craof.Cultura;
import org.entidade.craof.LocalPlantio;
import org.entidade.usuario.Usuario;
import screen.craof.FrameAuxiliar;
import screen.craof.SegundaTela;
import screen.craof.aplicacaoInsumos.AplicacaoInsumo;
import screen.craof.destinoProduto.DestinoProdutos;
import screen.craof.cultura.PanelCulturaBuscar;
import screen.craof.cultura.PanelCulturaCadastrar;
import screen.craof.fichas.ControlePlantio.ControlePlantio;

/**
 *
 * @author Luan
 */
public class PanelLocalBuscar extends javax.swing.JPanel {

    /**
     * Creates new form PanelLocalBuscar
     */
    public PanelLocalBuscar(JFrame frame) {
        initComponents();
        this.frame = frame;
        inicializar();
    }

    private void inicializar() {
        controle = new Controle_CRUD_Local();
        listaLocalPlantio = new ArrayList();
        usuario = new Usuario();
        localPlantio = new LocalPlantio();
        usuario.setId(1);
        localPlantio.setDescricao(wtNome.getText().toString().toUpperCase());
        try {
            listaLocalPlantio = controle.buscarTodos(localPlantio, usuario);
            System.out.println(listaLocalPlantio.size());
            DefaultTableModel model = (DefaultTableModel) wtblocal.getModel();
            model.getDataVector().removeAllElements();
            for (LocalPlantio aux : listaLocalPlantio) {
                model.addRow(new Object[]{aux.getId_localPlantio(), aux.getDescricao()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelCulturaBuscar.class.getName()).log(Level.SEVERE, null, ex);
        }

        alterar.setVisible(false);
        excluir.setVisible(false);
        cancelar1.setVisible(false);
        wlCodigo.setVisible(false);
        wtCodigo.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelar1 = new javax.swing.JButton();
        wlNome = new javax.swing.JLabel();
        cancelar2 = new javax.swing.JButton();
        wtNome = new javax.swing.JTextField();
        wslocal = new javax.swing.JScrollPane();
        wtblocal = new javax.swing.JTable();
        wlCodigo = new javax.swing.JLabel();
        wtCodigo = new javax.swing.JTextField();
        alterar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        selecionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        cancelar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelar1.setText("CANCELAR");
        cancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar1ActionPerformed(evt);
            }
        });

        wlNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wlNome.setText("Descrição do Local:");

        cancelar2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelar2.setText("CANCELAR");
        cancelar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar2ActionPerformed(evt);
            }
        });

        wtblocal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Código", "Descrição do Local"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        wslocal.setViewportView(wtblocal);

        wlCodigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wlCodigo.setText("Código:");

        wtCodigo.setEditable(false);

        alterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        alterar.setText("ALTERAR");
        alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarActionPerformed(evt);
            }
        });

        excluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        excluir.setText("EXCLUIR");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        buscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buscar.setText("BUSCAR");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        selecionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selecionar.setText("SELECIONAR");
        selecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("BUSCAR LOCAL");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/craof80.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(wslocal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(wlCodigo)
                                .addGap(76, 76, 76)
                                .addComponent(wtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(wlNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(alterar)
                                        .addGap(18, 18, 18)
                                        .addComponent(excluir)
                                        .addGap(10, 10, 10)
                                        .addComponent(cancelar1)
                                        .addGap(85, 85, 85))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(wtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buscar)))))
                        .addGap(0, 120, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(195, 195, 195)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(selecionar)
                .addGap(95, 95, 95)
                .addComponent(cancelar2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wlCodigo)
                    .addComponent(wtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wlNome)
                    .addComponent(wtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alterar)
                    .addComponent(excluir)
                    .addComponent(cancelar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wslocal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelar2)
                    .addComponent(selecionar))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar1ActionPerformed
        if (frame instanceof SegundaTela) {
            ((SegundaTela) frame).voltar();
        } else {
            ((FrameAuxiliar) frame).fechar();
        }
    }//GEN-LAST:event_cancelar1ActionPerformed

    private void cancelar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar2ActionPerformed
        if (frame instanceof SegundaTela) {
            ((SegundaTela) frame).voltar();
        } else {
            ((FrameAuxiliar) frame).fechar();
        }
    }//GEN-LAST:event_cancelar2ActionPerformed

    private void selecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarActionPerformed
        if (frame instanceof SegundaTela) {
            if (wtblocal.getSelectedRow() > -1) {
                buscar.setVisible(false);
                selecionar.setVisible(false);
                wslocal.setVisible(false);
                alterar.setVisible(true);
                excluir.setVisible(true);
                cancelar2.setVisible(false);
                cancelar1.setVisible(true);
                wtCodigo.setText(listaLocalPlantio.get(wtblocal.getSelectedRow()).getId_localPlantio() + "");
                wtNome.setText(listaLocalPlantio.get(wtblocal.getSelectedRow()).getDescricao());
            } else {
                JOptionPane.showMessageDialog(null, "ERROR CRAOFx03 : Selecione uma linha da tabela.");
            }
        } else {
            FrameAuxiliar c = (FrameAuxiliar) frame;
            int line = wtblocal.getSelectedRow();
            if (line >= 0) {
                LocalPlantio local = new LocalPlantio();
                local.setId_localPlantio((Integer) wtblocal.getValueAt(line, 0));
                local.setDescricao((String) wtblocal.getValueAt(line, 1));
                if (c.getPanel() instanceof ControlePlantio) {
                    ((ControlePlantio) c.getPanel()).setLocal(local);
                } else if (c.getPanel() instanceof AplicacaoInsumo) {
                    ((AplicacaoInsumo) c.getPanel()).setLocal(local);
                } else if (c.getPanel() instanceof DestinoProdutos) {
                    ((DestinoProdutos) c.getPanel()).setLocalPlantio(local);
                }
            }
            c.fechar();
        }
    }//GEN-LAST:event_selecionarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        controle = new Controle_CRUD_Local();
        listaLocalPlantio = new ArrayList();
        usuario = new Usuario();
        localPlantio = new LocalPlantio();
        usuario.setId(1);
        localPlantio.setDescricao(wtNome.getText().toString().toUpperCase());
        try {
            listaLocalPlantio = controle.buscarTodos(localPlantio, usuario);
            System.out.println(listaLocalPlantio.size());
            if (listaLocalPlantio.size() == 0) {
                System.out.println("aa");
                Object[] options = {"Sim", "Não"};
                int n = JOptionPane.showOptionDialog(frame, "Deseja cadastrar essa cultura?", "Confirmação de cadastro",
                        JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
                if (n == 0) {
                    controle = new Controle_CRUD_Local();
                    usuario = new Usuario();
                    localPlantio = new LocalPlantio();
                    localPlantio.setDescricao(wtNome.getText());
                    localPlantio.setId_usuario(1);
                    int cadastrou = 0;
                    try {
                        usuario.setId(1);
                        cadastrou = controle.cadastrar(localPlantio, usuario);
                        if (cadastrou == 0) {
                            JOptionPane.showMessageDialog(null, "Cadastro feito com sucesso");
                            localPlantio.setId_localPlantio(Integer.parseInt(controle.maximoId()));
                            DefaultTableModel model = (DefaultTableModel) wtblocal.getModel();
                            listaLocalPlantio.add(localPlantio);
                            for (LocalPlantio aux : listaLocalPlantio) {
                                model.addRow(new Object[]{aux.getId_localPlantio(), aux.getDescricao()});
                            }
                        } else if (cadastrou == 1) {
                            JOptionPane.showMessageDialog(null, "ERROR CRAOFx01: Falha ao cadastrar.");
                        } else {
                            JOptionPane.showMessageDialog(null, "ERROR CRAOFx01: Já existe uma cultura cadastrada com este nome");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(PanelCulturaCadastrar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (cadastrou == 0) {
                        if (frame instanceof FrameAuxiliar) {
                            try {
                                localPlantio = controle.buscarId(localPlantio, usuario);
                                FrameAuxiliar c = (FrameAuxiliar) frame;
                                if (c.getPanel() instanceof ControlePlantio) {
                                    ((ControlePlantio) c.getPanel()).setLocal(localPlantio);
                                } else if (c.getPanel() instanceof AplicacaoInsumo) {
                                    ((AplicacaoInsumo) c.getPanel()).setLocal(localPlantio);
                                } else if (c.getPanel() instanceof DestinoProdutos) {
                                    ((DestinoProdutos) c.getPanel()).setLocalPlantio(localPlantio);
                                }
                                ((FrameAuxiliar) frame).fechar();
                            } catch (SQLException ex) {
                                Logger.getLogger(PanelCulturaCadastrar.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            } else {
                DefaultTableModel model = (DefaultTableModel) wtblocal.getModel();
                model.getDataVector().removeAllElements();
                for (LocalPlantio aux : listaLocalPlantio) {
                    model.addRow(new Object[]{aux.getId_localPlantio(), aux.getDescricao()});
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelCulturaBuscar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarActionPerformed
        try {
            if (!controle.alterar(listaLocalPlantio.get(wtblocal.getSelectedRow()), wtNome.getText().toString())) {
                JOptionPane.showMessageDialog(null, "Nome alterado com sucesso!");
                ((SegundaTela) frame).fecharPanel();
            } else {
                JOptionPane.showMessageDialog(null, "ERROR CRAOFx03 - Erro ao alterar o nome!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelCulturaBuscar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_alterarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        try {
            if (!controle.excluir(wtblocal.getValueAt(wtblocal.getSelectedRow(), 0).toString())) {
                JOptionPane.showMessageDialog(null, "Cultura excluída com sucesso!");
                ((SegundaTela) frame).fecharPanel();
            } else {
                JOptionPane.showMessageDialog(null, "ERROR CRAOFx04 - Erro ao excluir a cultura");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelCulturaBuscar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterar;
    private javax.swing.JButton buscar;
    private javax.swing.JButton cancelar1;
    private javax.swing.JButton cancelar2;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton selecionar;
    private javax.swing.JLabel wlCodigo;
    private javax.swing.JLabel wlNome;
    private javax.swing.JScrollPane wslocal;
    private javax.swing.JTextField wtCodigo;
    private javax.swing.JTextField wtNome;
    private javax.swing.JTable wtblocal;
    // End of variables declaration//GEN-END:variables
    private final JFrame frame;
    private Controle_CRUD_Local controle;
    private Usuario usuario;
    private LocalPlantio localPlantio;
    private ArrayList<LocalPlantio> listaLocalPlantio;
}
